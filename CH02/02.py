# 2024.05.10 

# 연습문제 58p

# 2-1 변수에 메세지 할당한 다음 출력
message = "안녕하세요, 파이썬!"
print(message)

# 2-2 변수에 메세지 할당한 다음 출력. 변수 값 바꾸고 새 매세지 출력.
message = "처음으로 변수에 할당된 메시지입니다."
print(message)

# 변수 값 바꾸기
message = "변수 값이 변경되었습니다!"
print(message)



# 연습문제 65p

# 2-3 변수에 사람 이름 저장하고 그 사람에게 보내는 메세지 출력, 메세지의 내용은 간단하게.
person_name = "홍길동"
print(f"{person_name}님에게 메시지를 전송합니다: 안녕하세요, {person_name}님!")

# 2-4 변수에 사람 이름 저장한 다음. 그 이름을 대문자, 소문자, 첫 글자만 대문자로 출력.
person_name = "Hong Gil Dong"

# 대문자로 출력
print(person_name.upper())

# 소문자로 출력
print(person_name.lower())

# 첫 글자만 대문자로 출력
print(person_name.capitalize())



# 연습문제 66p

# 2-5 위인의 이름과 명언을 출력. 다음 예시와 같이 출력.
# 아인슈타인, "한 번도 실수한 적 없는 사람은 한 번도 새로운 것에 도전해 본 적 없는 사람이다."
print('아인슈타인, "한 번도 실수한 적 없는 사람은 한 번도 새로운 것에 도전해 본 적 없는 사람이다."')

# 2-6 [연습문제 2-5]를 반복하되, 위인의 이름을 famous_person 변수에 저장. 메세지를 새 변수 msg에 저장하고 메세지 출력.
famous_person = "아인슈타인"
msg = f'{famous_person}, "한 번도 실수한 적 없는 사람은 한 번도 새로운 것에 도전해 본 적 없는 사람이다."'
print(msg)

# 2-7 변수에 사람 이름 저장하되 이름 앞 뒤에 공백 몇 글자 추가. 
name = "  제인  "
print(name.strip())  # 앞뒤 공백 제거

# 2-8 filename 변수에 'python_notes.txt'를 할당. removesuffix() 메서드를 사용해 파일 확장자 없이 파일 이름을 출력.
filename = 'python_notes.txt'
print(filename.removesuffix('.txt'))  # 파일 확장자 제거 후 출력



# 연습문제 78p

# 3-1 친구의 이름 5가지를 name 리스트에 저장. 리스트의 각 요소를 한 번에 하나씩 접근하면서 친구 이름을 출력.
names = ['철수', '영희', '민수', '지영', '태호']

# 리스트의 각 요소를 출력
for name in names:
    print(name)

# 3-2 [연습 문제 3-1]의 리스트 사용해 친구 이름이 들어간 메세지 출력. 각 메세지 텍스트는 모두 같고 친구 이름만 달라야함.
# 친구 이름 리스트 생성
names = ['철수', '영희', '민수', '지영', '태호']

# 각 친구 이름을 포함한 메시지 출력
for name in names:
    print(f'{name}야, 점심 먹자!')

# 3-3 오토바이나 자동차 같은 좋아하는 교통수단을 리스트에 저장. 리스트 사용해 "나는 혼다 오토바이를 갖고 싶습니다" 같은 일련의 문장 출력.
# 좋아하는 교통수단 리스트 생성
transportation = ['오토바이', '자동차', '자전거', '지하철']

# 각 교통수단을 이용한 메시지 출력
for vehicle in transportation:
    print(f'나는 {vehicle}를 타고 여행하고 싶습니다.')



# 연습문제 85p

# 3-4 저녁 식사에 초대하고 싶은 셋 이상의 사람을 포함된 리스트 제작. 리스트 사용해 각 사람을 저녁 식사에 초대하는 메세지 출력.
guests = ['철수', '영희', '민수', '지영']

# 각 사람을 초대하는 메시지 출력
for guest in guests:
    print(f'{guest}님, 저녁 식사에 초대합니다!')

# 3-5 손님 중 한명이 저녁 식사에 참여 불가능하다고 함. 다른 사람에게 초대장 다시 보내서 다시 초대.
# [연습문제 3-4]에서 시작. 프로그램 마지막에 print() 함수를 추가해, 참가하지 못한 손님 이름 출력.
# 리스트 수정해 참가하지 못한 손님 이름을 새로 초대하는 손님 이름으로 변경.
# 리스트의 각 손님에 대해 두번째 초대장 출력.
# 초대할 사람 리스트 생성
guests = ['철수', '영희', '민수', '지영']

# 참가 불가능한 손님
unable_to_attend = '민수'

# 참가하지 못한 손님 출력
print(f'{unable_to_attend}님이 저녁 식사에 참석하지 못할 것 같습니다.')

# 참가 불가능한 손님을 새 손님으로 대체
new_guest = '호영'
guests[guests.index(unable_to_attend)] = new_guest

# 두 번째 초대장 출력
for guest in guests:
    print(f'{guest}님, 저녁 식사에 다시 초대합니다!')



# 연습문제 86p

# 3-6 더 큰 저녁 식사 테이블 찾았음. 그러므로 손님을 더 초대함. 추가로 손님 세 명 정하시오.
# [연습문제 3-4], [연습문제 3-5]에서 시작. 프로그램 마지막 print() 함수 추가해, 손님들에게 더 큰 테이블 찾았다고 알림.
# insert() 사용해 리스트 처음에 새 손님 추가.
# insert() 사용해 리스트 중간에 새 손님 추가.
# append() 사용해 리스트 마지막에 새 손님 추가.
# 각 손님에 대해 새로운 초대장 출력.

# 초대할 사람 리스트 생성
guests = ['철수', '영희', '민수', '지영']

# 더 큰 테이블을 찾았음을 알리는 메시지 출력
print("더 큰 테이블을 찾았습니다. 더 많은 손님을 초대하겠습니다!")

# 새 손님 세 명 추가
guests.insert(0, '동진')  # 리스트 처음에 추가
guests.insert(2, '윤호')  # 리스트 중간에 추가
guests.append('태현')      # 리스트 마지막에 추가

# 각 손님에 대해 새로운 초대장 출력
for guest in guests:
    print(f'{guest}님, 더 큰 테이블에 초대합니다!')

# 3-7 주문한 테이블이 저녁 식사 시간까지 배달 불가능. 손님 두명만 앉기 가능
# [연습문제 3-6]에서 시작. 저녁 식사에 손님 두명만 초대 가능하다 메세지 출력.
# pop() 사용해 손님 한명씩 제거. 두명만 남을때 까지 계속함.
# 리스트에서 손님 이름 제거할때마다 식사 초대 할 수 없게 되어 미안하다는 메세지 출력.
# 아직 리스트에 있는 두 손님에게는 취소되지 않았다는 메시지 출력.
# del문 사용해 리스트의 두 소님을 제거해 빈 리스트로 바꿈. 프로그램 마지막에서 리스트 출력.리스트가 실제로 비었는지 확인.

# 주문한 테이블이 배달 불가능한 경우
print("주문한 테이블이 저녁 식사 시간까지 배달이 불가능합니다.")
print("죄송합니다만, 현재 손님 두 분만 앉을 수 있습니다.")

# 손님 두 명씩 제거하면서 제거되는 손님에게 취소 메시지 출력
while len(guests) > 2:
    removed_guest = guests.pop()
    print(f'{removed_guest}님, 죄송합니다. 저녁 식사에 참석이 불가능해졌습니다.')

# 아직 리스트에 있는 손님들에게는 취소되지 않았음을 알리는 메시지 출력
print("아직 리스트에 있는 손님들에게는 취소되지 않았습니다.")

# 리스트의 두 손님 제거
del guests[:2]

# 빈 리스트인지 확인하고 출력
print("현재 손님 리스트:", guests)




